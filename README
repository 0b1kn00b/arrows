Arrows lib released under M.I.T license

BUILD

get dependencies with :

git submodule init
git submodule update

either use the FlashDevelop projects or

haxe NekoArrow.hxml

Usage.
	//lifts function f and passes output to arrow/function g at completion.
	//start() runs the arrow scheduler
	
	Arrow.lift(f).then( g.lift() ).run(x).start();

	function (x:){ return x * 2; }
		.lift().then( g.lift() ).run();
	
	Arrow.begin();
	
	
For more information on arrows, see:
http://en.wikipedia.org/wiki/Arrow_(computer_science)
http://www.cs.umd.edu/projects/PL/arrowlets/
http://www.cs.umd.edu/~jfoster/arrows.pdf

see doc/arrows.jpg for a visual outlay of the basic combinators.

note: ONLY THE COMBINATORS ARE SUPPORTED, THE SCHEDULING ALGORITHM MAY CHANGE WITHOUT WARNING.

GOTCHA
No arrows can be guaranteed to be called after start() as a single threaded scheduler (InlineScheduler) will block until completion.

DEPENDENCIES
Stax.

Known issues.

2) 	Animate is not implemented in single threaded environments.

Changes.

0.2.2
Works on cpp/as2/as3/neko/js
Error handling by arrow.error, not stable yet.

0.2.1
Faster scheduler, still @40x slower than vanilla function calls.
Fully Typed.
Error mechanism: Drops all Arrows except terminal, which calls Progress.recover.
Renaming of Combinators.
File structure changes.